Finished:
---------
Graphhopper web
----------------
1. on the client side, A dropdown listbox has been added to the webpage that allows the user to select preferred weighting; i.e fastest, shortest.
2. on the server side, Based on available sensor data for each city, appropriate config file is read (by checking the opened city map). This information is sent to the client, and the weighting dropdown list is amended accordingly with available sensors weighting options; e.g. least_noisy
3. On the client side, the URL query is amended to include weighting (its value is taken from the value selected by the user), and vehicle, which is read from config.properties.
4. On the client side, If the user entered the query directly from the URL, e.g. (http://localhost:9000/?point=Tallaght&point=Blackrock&vehicle=car&weighting=shortest&locale=en-US), the params values from the query are propagated to corresponding DOM elements!
5. Routing is done if the user selects 'shortest' by calling relevant encoder (only fastest was implemented)


TODO:
----
1. Graphhopper: Building noise encoder that accesses noise readings from redis for possible returned paths, and returns the path with min total noise

2. If more than one vechile is specified in "osmreader.acceptway" in config.properties, the aplication raises an exception when it runs; i.e "Multiple encoders are active, can't return one". currently, only one vechile type is accepted; car,foot,bike,mtb,racingbike.
   -> This exception is actually coming from EncodingManger when encodingManager.getSingle() is called inside route() inside graphhopper
   -> Also check getVehicleCount() inside encodingManager()
   -> Maybe this could be solved by defining another method similar to getSingle() that returns multiple FlagEncoder corresponding to
      the values specified in osmreader.acceptWay

3. If Bike or Foot is specificed in 'acceptWay' in config file, the user to be provided the option to specify 'Elevation' Yes or NO
   -> elevation is equals false by default
